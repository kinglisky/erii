<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>芊野</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ierii.com/"/>
  <updated>2018-09-06T17:09:51.357Z</updated>
  <id>http://ierii.com/</id>
  
  <author>
    <name>kinglisky</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>逐鲸</title>
    <link href="http://ierii.com/2018/09/06/%E9%80%90%E9%B2%B8/"/>
    <id>http://ierii.com/2018/09/06/逐鲸/</id>
    <published>2018-09-06T03:11:11.000Z</published>
    <updated>2018-09-06T17:09:51.357Z</updated>
    
    <content type="html"><![CDATA[<p>DLC 英杰之诗的英杰之诗终于过了，最后的合照感动满满。</p><p><img src="/img/zelda.jpeg" alt="塞尔达"></p><a id="more"></a><p>记得在卓拉领地做石碑调查任务是看到的：</p><blockquote><p>——卓拉史 第四章——<br>光鳞之枪与英杰祭祀<br>卓拉大王多莱凡笔——<br>吾与王妃喜获宝玉般怜人的爱女。<br>吾等将王女命名为——米法。<br>彼时，金属工匠罗司里为米法献上诞辰贺礼，<br>即光鳞之枪。<br>米法健康茁壮长大成人，<br>已是接受王族骑士团指导的年纪。<br>骑士团的众人都对王女疼爱有加……<br>尤其是士兵长塞恭，更将她视如己出。<br>米法在塞恭的指导下，枪术愈发精进。<br>伴随着光鳞之枪，日渐散发耀眼光彩。<br>成为英杰的米法是卓拉一族的荣耀。<br>但她却在大灾厄之日成了不归人。<br>卓拉领地笼罩在悲叹之中，<br>人人都思念着王女，终日以泪洗面。<br>为使米法之魂安息，<br>吾等欲将光鳞之枪沉入卓拉河之时……<br>宛如米法的魂魄显灵一般，<br>光鳞之枪发出光芒，开始娓娓道来。<br>光鳞之枪即我……光鳞之枪即米法。<br>所以，请大家拾起笑容……莫再流泪。<br>故卓拉族在大灾厄之日，即米法逝去之日，<br>会装饰光鳞之枪以歌颂她的事迹。<br>这就是英杰祭祀的起源。</p></blockquote><blockquote><p>——卓拉史 第三章——<br>卓拉铠甲的传说<br>卓拉大王多莱凡笔——<br>相传古时卓拉领地有位不善征战的大王。<br>虽然大王不谙武艺之道，<br>王妃依旧深爱着这样的大王。<br>某日，大王收到急报禀告称，<br>有一大群怪物正集结至杜·邦山脉。<br>大王为了守护人民，决意出战，<br>但王妃非常担心不善征战的大王。<br>为祈祷大王出征平安无事，<br>王妃将自身的鳞片缝在大王的铠甲上。<br>卓拉一族在战争中占了优势，<br>本以为能就此顺利结束战事，未料……<br>蜥蜴战士之将帅逮到瞬息破绽，挥刀直入，<br>转眼之间，大王就被逼得走投无路。<br>在蜥蜴战士举剑欲刺大王的瞬间，<br>奇迹出现了。<br>大王身上的一部分铠甲发出强烈光芒，<br>眼睛受到刺激的蜥蜴战士顿时停下动作。<br>大王并未错失此一良机，使出一记横砍，<br>割断蜥蜴战士的喉咙。<br>那是王妃缝制在大王铠甲上的鳞片……<br>女性特有的雪白鳞片反射夕阳，创造了奇迹。<br>因为这段佳话，王族从此开始举行赠铠仪式，<br>祈祷未来的夫婿一生平安。</p></blockquote><p>不知道一百多年前的林克是否看过这个石碑，而今为你缝制衣服的人已经不在了，而她亲手缝制的铠甲还在，一次又一次的保护着你。</p><p>2018-02-19</p><p>嘿二狗们！</p><video src="http://renderer.cdnvue.com/videos/-534938799574221904/vfLs9lpaZe/6hJiot.mov" width="600" height="400" controls="controls"><br></video><p>2017-11-25</p><p>天冷冻狗，注意加衣。</p><video src="http://cdnvue.com/video/iUXOMA1NEI/6CAvhW" width="600" height="400" controls="controls"><br></video><p>2017-11-20</p><p>青铜不语</p><video src="http://cdnvue.com/video/iUXOMA1NEI/6A2obh" width="600" height="400" controls="controls"><br></video><p>2017-11-07</p><p>主题：生日快乐</p><p>好吧，生日快乐！</p><p>又老了一岁，其实没什么好感叹的。</p><p>如果有人问我：23 周岁生日时，你做了什么？</p><p>可以肯定的是此刻我组织了一点文字，往仓库中推了一条 PR。</p><p>还是一只狗单着。</p><p><img src="/img/jingyu.jpg" alt="鲸鱼"></p><p>双十一又到了，刚给家里买了台电视，近期想买无人机玩玩，还在犹豫。</p><p>往后计划多看看书，多出去走走，写点自己的东西。</p><p>最近状态还不错，再加一把油吧！</p><p>今天早点睡。</p><p>2017-11-02</p><p>主题：唐三彩</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="520" height="86" src="//music.163.com/outchain/player?type=2&id=391206&auto=0&height=66"></iframe><p>香腮胜雪只为你一笑能解我千愁。</p><p>2017-11-01</p><p>主题：蛰伏</p><p>那些藤蔓在春天发芽，在夏天里肆意生长，然后在秋天枯萎没入土中，等待一个冬季的蛰伏在下一个春天开出可爱的红花。</p><p>真心为你。</p><p><img src="/img/ziluolan.jpg" alt="紫罗兰"></p><!--more--><p>2017-10-22</p><p>主题梧：桐街景</p><p>照着<a href="https://www.zhihu.com/question/30994429/answer/60947832?utm_medium=social&amp;utm_source=wechat_session&amp;from=singlemessage&amp;isappinstalled=0" target="_blank" rel="noopener">攻略</a>的路线走了一遍，复兴西路-武康路-余庆路，路上的梧桐很多骑着车特别有味道。</p><video src="http://cdnvue.com/video/iUXOMA1NEI/5zvp9f" width="600" height="400" controls="controls"><br></video><!--more--><p>2017-10-16</p><p>主题：来自深渊</p><p>7 月番中最精彩的作品了，</p><p>音乐好听，剧情超赞，特别是最后一集，真是圈粉了。</p><p>娜娜琪：我的宝物…. </p><p>感动的不要不要的。</p><p><img src="/img/laizishenyuan.jpg" alt="来自深渊"></p><p>2017-10-15</p><p>主题：白夜行</p><p>之前没有看过东野圭吾的作品，查了一下，决定先看看《白夜行》，然后十一在路上的时间把它看完了。</p><p>总的来说是很黑很悲的故事，就像那个警察说的一样，故事如果能能早早结束的话，就不会由接下来近 18 年的悲剧了。</p><p>对其中的两句台词影响特别深：</p><blockquote><p>一天中，太阳会升起，同时还会落下。人生也一样，有白天和黑夜，只是不会像太阳那样，有定时的日出和日落。有些人一辈子都活在太阳的照耀下，也有些人不得不一直活在漆黑的深夜里。人害怕的，就是本来一直存在的太阳落下不再升起，也就是非常害怕原本照在身上的光芒消失。</p></blockquote><blockquote><p>我的天空里没有太阳，总是黑夜，但并不暗，因为有东西代替了太阳。虽然没有太阳那么明亮，但对我来说已经足够。凭借着这份光，我便能把黑夜当成白天。我从来就没有太阳，所以不怕失去。</p></blockquote><p>小说只是打着侦探小说的幌子，用很长的时间线去讲一个故事。一个一开始就注定悲剧的故事。</p><p>2017-10-10</p><p>主题：我想吃掉你的胰脏</p><p>无聊刷完了一部漫画，名字就叫《我想吃掉你的胰脏》，咋一看名字挺猎奇的，我以为又是啥僵尸吸血鬼妹子啥的，真正看了一话后发现莫名的有意思。</p><p>故事的开始就是就已经注定好了结局，开头就告诉你结局绝对会虐的，你看还是不看，总感觉自己有点抖M倾向，看吧，这类作品还看得少吗？</p><p>中国有句古话，缺哪补哪，所以才有那么多人尊崇老祖宗的话对吃很是下功夫。</p><p>我想吃掉你的胰脏–是故事开始时女主对男主的说的，然后故事的中男主也说过同样的话，女主是个胰脏患病晚期的病人。所以题目虽然有点猎奇，但不得不说真的挺贴切。剧情真的很有意思。做个标记<a href="http://m.dmzj.com/info/39859.html" target="_blank" rel="noopener">漫画链接</a>。这里就不讲漫画的内容了。</p><p>看完漫画后，想追一波原著小说，查了一下消息，明年动画电影就要上映，大天朝好像有机会看到，可以期待一波。</p><p>我想吃掉你的胰脏，想从你那得到我没有的东西，我憧憬成为你那样的人。这大概就是作品想表达的东西吧。</p><p>故事不错安利一下。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DLC 英杰之诗的英杰之诗终于过了，最后的合照感动满满。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/zelda.jpeg&quot; alt=&quot;塞尔达&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="心情" scheme="http://ierii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>小怪兽</title>
    <link href="http://ierii.com/2018/05/20/%E5%B0%8F%E6%80%AA%E5%85%BD/"/>
    <id>http://ierii.com/2018/05/20/小怪兽/</id>
    <published>2018-05-20T15:53:12.000Z</published>
    <updated>2018-09-03T16:09:26.842Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/erii.jpg" alt=""></p><p>最近最开心的一件事应该就是可以看到《龙族 IV》，江南老贼也终于是记得开始写《龙族》了，记得是前年年末把《龙三》和《龙四》看完的，看完《龙三》后整整两三天没法好好工作，满脑子都是那只小怪兽的身影，太伤了，好久没缓过来。</p><a id="more"></a><blockquote><p>“我们都是小怪兽，有一天会被正义的奥特曼杀死。”</p></blockquote><blockquote><p>是啊，你是小怪兽，可小怪兽也有小怪兽的好朋友，孤独的小怪兽们害怕得靠在一起，但如果正义的奥特曼要来杀你，我就帮你把你把正义的奥特曼杀死。</p></blockquote><blockquote><p>可是我答应了，却没有做到。</p></blockquote><blockquote><p>“04.24，和Sakura去东京天空树，世界上最暖和的地方在天空树的顶上。”<br>“04.26，和Sakura去明治神宫，有人在那里举办婚礼。”<br>“04.25，和Sakura去迪士尼，鬼屋很可怕，但是有Sakura在，所以不可怕。”<br>“Sakura最好了。”</p></blockquote><p>记得是初二的时候买了本《此间的少年》，从此入了江南的坑，一些江南的老粉可以会唾弃现在的江南，一股商人的气息。我倒是没啥感觉，除了他一年比一年坑以外…..《九州》这个大坑也不知道何年何月才能填上。</p><p>有人说江南最近的几年的文风变了很多，诚然《龙族》的乍一看和以前作品风格差了好多，可我觉得《龙族》老贼真的写的很用心，除了慢了点。一个作家写出再多作品，其实作品里面写的还是那几个人。</p><p>我们衰仔路明非、令狐冲、吕归尘、江洋，和我们的郭靖、姬野、楚之航能看到太多相似的地方，换了个地方讲一个稍微不一样的故事。</p><p>除了龙族以外我最喜欢的就是《此间》和《上海堡垒》了，堡垒的故事也伤，整篇的小说也只是为最后那条时隔 13 年的短信做铺垫。</p><blockquote><p>12年9个月又6天。这条短信在中国移动的信号台之间穿梭，找不到它的目的地，就像是永不消逝的电波，穿行在空无一人的城市里。我想象这个沉眠在地下的城市，那条短信是个虚无缥缈的女孩，有的时候她会升上泡防御界面的顶端，隔着那层透明的东西，看着紫色的大丽花盛开，而后低头俯视空无一人的城市。</p></blockquote><p>熟悉老贼作品的人可能会说，这个故事好老套，嗯确实老套，但奈何每次都会买他的帐。</p><p>至于那些故事里小怪兽，多期待她们能有个 happy end。</p><p>记得去年去明治神宫的时候还特地为明非和小怪兽写了个祝福的绘马。</p><p>据老贼说《龙族》他会给大家一个好结局。</p><p>最近又有消息《to the moon》要出同名动画电影了，多希望京阿尼能操手，估计 19 年能看到了，又多了一个盼头。</p><p>自己呢？多看书，多撸点代码。咸鱼也是有咸鱼的职业操守的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/erii.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近最开心的一件事应该就是可以看到《龙族 IV》，江南老贼也终于是记得开始写《龙族》了，记得是前年年末把《龙三》和《龙四》看完的，看完《龙三》后整整两三天没法好好工作，满脑子都是那只小怪兽的身影，太伤了，好久没缓过来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="心情" scheme="http://ierii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>小修小补</title>
    <link href="http://ierii.com/2018/04/10/%E5%B0%8F%E4%BF%AE%E5%B0%8F%E8%A1%A5/"/>
    <id>http://ierii.com/2018/04/10/小修小补/</id>
    <published>2018-04-10T09:06:32.000Z</published>
    <updated>2018-04-11T12:56:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/04/10/5accc5b184296.jpg" alt="sky"></p><p>很久没有归纳梳理过学过的知识点，作为一个笔记陆续记下来。</p><a id="more"></a><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Node/nodeType" target="_blank" rel="noopener">节点类型</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Node/cloneNode" target="_blank" rel="noopener">节点克隆</a></li></ul><h2 id="EVENT"><a href="#EVENT" class="headerlink" title="EVENT"></a>EVENT</h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener" target="_blank" rel="noopener">事件冒泡捕获</a></li></ul><h2 id="RESTful-幂等性"><a href="#RESTful-幂等性" class="headerlink" title="RESTful 幂等性"></a>RESTful 幂等性</h2><p><strong>幂等与安全的方法</strong></p><blockquote><p>安全方法是指不修改资源的 HTTP 方法。譬如，当使用 GET 或者 HEAD 作为资源 URL，都必须不去改变资源。然而，这并不全准确。意思是：它不改变资源的<strong>表示形式</strong>。对于安全方法，它仍然可能改变服务器上的内容或资源，但这必须不导致不同的表现形式。</p></blockquote><p>安全方法和幂等操作并没有直接联系，例如 GET 是个安全方法：</p><blockquote><p>GET /tickets/12/delete</p></blockquote><p>这样的 GET 操作实际会影响到资源状态，当无论你调用多少次，始终只会删除一个资源，所以这个操作是幂等的，RESTful 幂等性关注的多次操作影响是不是一直的。</p><p>简单理解：RESTful 的幂等操作，是指无论操作多少次每次操作的资源结果都是相同。</p><p><strong>GET</strong></p><p>GET 是个幂等操作，GET 的操作无论调用多少次都不会影响资源本身。</p><p><strong>POST</strong></p><p>POST 是典型的非幂等操作，POST 典型的操作就是新增一个资源项目，每次调用的都会产生的新的资源。</p><p><strong>PUT</strong></p><p>PUT 呢？例如下面这个操作</p><blockquote><p>PUT     /tickets/12    # 更新 ticket 12</p></blockquote><p>因为它直接把实体部分的数据替换到服务器的资源，我们多次调用它，只会产生一次影响，但是有相同结果的 HTTP 方法，所以满足幂等性。</p><p><strong>PATCH</strong></p><p>PATCH 呢？感觉上和 PUT 是一样的，但其实不然。</p><p>PATCH 方法是非幂等的。POST 方法和 PUT 方法可能比较好理解，但是 PATCH 方法只是更新部分资源，怎么是非幂等的呢?</p><p>因为，PATCH 提供的实体则需要根据程序或其它协议的定义，解析后在服务器上执行，以此来修改服务器上的资源。换句话说，PATCH 请求是会执行某个程序的，如果重复提交，程序可能执行多次，对服务器上的资源就可能造成额外的影响，这就可以解释它为什么是非幂等的了。</p><p>可能你还不能理解这点。我们举个例子</p><blockquote><p>PATCH   /tickets/12    # 更新 ticket 12</p></blockquote><p>此时，我们服务端对方法的处理是，当调用一次方法，更新部分字段，将这条ticket记录的操作记录加一，这次，每次调用的资源是不是变了呢，所以它是有可能是非幂等的操作。</p><p><strong>DELETE</strong></p><p>DELETE 方法用于删除资源，会将资源删除。</p><blockquote><p>DELETE /tickets/12 # 删除 ticekt 12</p></blockquote><p>调用一次和多次对资源产生影响是相同的，所以也满足幂等性。</p><p>参考链接：</p><ul><li><a href="https://sofish.github.io/restcookbook/" target="_blank" rel="noopener">RESTful 手册</a></li><li><a href="http://blog.720ui.com/2016/restful_idempotent/" target="_blank" rel="noopener">RESTful 幂等性</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/04/10/5accc5b184296.jpg&quot; alt=&quot;sky&quot;&gt;&lt;/p&gt;
&lt;p&gt;很久没有归纳梳理过学过的知识点，作为一个笔记陆续记下来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技能" scheme="http://ierii.com/tags/%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>Github Page 自定义域名免费 https 证书</title>
    <link href="http://ierii.com/2018/03/28/%E4%B8%BAgithub-pages%E5%8A%A0%E4%B8%8A%E5%85%8D%E8%B4%B9%E5%AE%89%E5%85%A8%E8%AF%81%E4%B9%A6/"/>
    <id>http://ierii.com/2018/03/28/为github-pages加上免费安全证书/</id>
    <published>2018-03-28T02:59:21.000Z</published>
    <updated>2018-04-10T08:49:14.299Z</updated>
    
    <content type="html"><![CDATA[<p>现在各种组织都在推 <code>https</code> 协议，有很多网站都可以获取到免费 <code>https</code> 证书，比较知名的就是 <a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a> 了，不过这类服务一般都需要一个自定义域名关联一个自己的服务，在自己的服务端上配置好证书文件。</p><p>但很多时候，使用 Github 的小伙伴都会为自己的 github 首页关联一个自定义域名，例如我的 github-page 首页地址是 <a href="https://kinglisky.github.io" target="_blank" rel="noopener">kinglisky.github.io</a> 然后绑了个自定义的域名 <a href="https://nlush.com" target="_blank" rel="noopener">nlush.com</a>。</p><p>github 的 https 正式是针对 github.io 域下的，所以咱们绑定自定的域名是不支持 https 的，如何为 github-page 自定义域名加上 https 的小绿帽呢？</p><a id="more"></a><p>其实就是利用 <a href="https://www.cloudflare.com/" target="_blank" rel="noopener">Cloudflare</a> 提供的服务来做的。</p><blockquote><p>Cloudflare 提供一种被他们称之为 Universal SSL 的服务，可以让任意 HTTP 站点支持 HTTPS。它的原理是当访客使用 HTTPS 访问站点的时候，从访客到 Cloudflare 这段是加密的，然后从 Cloudflare 到站点这段是明文的。虽然不是全程加密，但也能很大程度加强网站的安全性。</p></blockquote><p>下面简单介绍一下：</p><h1 id="给-github-page-主页绑定自定义域名"><a href="#给-github-page-主页绑定自定义域名" class="headerlink" title="给 github-page 主页绑定自定义域名"></a>给 github-page 主页绑定自定义域名</h1><p>这个操作很简单，直接在自己的域名服务平台操作就行了，例如我的域名服务是阿里云提供的，直接为 <code>kinglisky.gihtub.io</code> 加了个 A 记录或者 CNAME，两者都行。不过这里个人推荐使用 A 记录，使用 CNAME 映射的时候 <code>Cloudflare</code> 的解析老是出错，后来换成 A 记录就好，不知道是不是人品问题，有兴趣的同学可以试试。</p><p>不知道自己 github-page 主页的 IP 地址的可以直接 <code>ping</code> 一下自己的 username.github.io 。</p><p><img src="https://ws1.sinaimg.cn/large/cd76e776gy1fpu4bdwdrxj20w8028dgf.jpg" alt=""></p><p>然后在自己的域名服务商上绑一下映射关系：</p><p><img src="https://ws1.sinaimg.cn/large/cd76e776gy1fpu4au1s1mj2148078gmd.jpg" alt=""></p><p>绑完后可以试试映射是不是正常的。</p><h1 id="注册-Cloudflare-添加站点"><a href="#注册-Cloudflare-添加站点" class="headerlink" title="注册 Cloudflare 添加站点"></a>注册 Cloudflare 添加站点</h1><p>先去 <a href="https://www.cloudflare.com" target="_blank" rel="noopener">https://www.cloudflare.com</a> 上注册一个账号。</p><p>然后添加站点：</p><p><img src="https://ws1.sinaimg.cn/large/cd76e776gy1fpu4cydkgtj21eu0o2jue.jpg" alt=""></p><p>添加完你的域名后，cloudflare 会自动扫描一波你自定义域名的 DNS 解析：</p><p><img src="https://ws1.sinaimg.cn/large/cd76e776gy1fpu4dvdz5aj21jc0fojtt.jpg" alt=""></p><p>可以看到我这边原来配置的 A 记录信息。切换到 Overview：</p><p><img src="https://ws1.sinaimg.cn/large/cd76e776gy1fpu4iig5srj21iw06s0tt.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/cd76e776gy1fpu4hfhpcyj21iu0twjwt.jpg" alt=""></p><p>将你你域名服务商默认改成 cloudflare 提供的 DNS：</p><ul><li>leia.ns.cloudflare.com</li><li>thomas.ns.cloudflare.com</li></ul><p><img src="https://ws1.sinaimg.cn/large/cd76e776gy1fpu4lkzhrij212s0egmzc.jpg" alt=""></p><p>在阿里云上更改 DNS 服务器时会报不符合云解析 DNS 配置，可以直接忽略，不影响使用，配置完 DNS 后，DNS 生效需要一段时间，然后 cloudflare 开始为你的自定义域名配置解析，这里也需要一段时间，亲测大概需要 10 ~ 30 分钟，看人品吧。</p><p>生效后大概是这样的：</p><p><img src="https://ws1.sinaimg.cn/large/cd76e776gy1fpu4qvtzq8j21jc0gq405.jpg" alt=""></p><p>然后可以在 Crypto 面板查看颁发证书的状态，这里也需要小等一下，成功以后如下：</p><p><img src="https://ws1.sinaimg.cn/large/cd76e776gy1fpu4tbjukwj21lw0oqn0s.jpg" alt=""></p><p>然后可以把你需要的配置项配置上：</p><p><img src="https://ws1.sinaimg.cn/mw690/cd76e776gy1fpu4w93so4j21l20d0q4l.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/mw690/cd76e776gy1fpu4w9iodgj21mi0f8tbd.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/mw690/cd76e776gy1fpu4w9gskqj21ls0eujtk.jpg" alt=""></p><p>整体的操作流程大概是就是这样，然后自定域名的小绿帽就有了。</p><p><img src="https://ws1.sinaimg.cn/mw690/cd76e776gy1fpu4ybaq9ej20rq07uq3j.jpg" alt=""></p><h1 id="我的配置为啥没生效？"><a href="#我的配置为啥没生效？" class="headerlink" title="我的配置为啥没生效？"></a>我的配置为啥没生效？</h1><p>我刚开始配置的时候也没生效，后来多试了试，发现还是时间的问题，切换 DNS 和 cloudflare  服务生效都需要一段时间，淡定一点，慢慢来。</p><p>还有使用 cloudflare 提供的 DNS解析会慢个 100ms，毕竟是免费的东西，不能要求更多了。</p><p>PS 有问题可以直接在这里提问：<a href="https://github.com/kinglisky/blog/issues" target="_blank" rel="noopener">https://github.com/kinglisky/blog/issues</a></p><p>参考资料：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/22667528" target="_blank" rel="noopener">开启 Github Pages 自定义域名 HTTPS 和 HTTP/2 支持​</a></li><li><a href="https://steffan.cn/2017/03/22/use-cloudflare-to-implement-HTTPS-for-GithubPages-with-custom-domain-names/" target="_blank" rel="noopener">使用 Cloudflare 为自定义域名的GithubPages实现HTTPS化</a></li><li><a href="https://leamtrop.com/2018/01/28/github-pages-cloudflare/" target="_blank" rel="noopener">Github Pages 免费使用 SSL 以及 CDN 加速</a></li></ul><p>刚听到的一首魔性的歌，哈哈~</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=504646385&auto=0&height=66"></iframe><p>晚安💤</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在各种组织都在推 &lt;code&gt;https&lt;/code&gt; 协议，有很多网站都可以获取到免费 &lt;code&gt;https&lt;/code&gt; 证书，比较知名的就是 &lt;a href=&quot;https://letsencrypt.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Let’s Encrypt&lt;/a&gt; 了，不过这类服务一般都需要一个自定义域名关联一个自己的服务，在自己的服务端上配置好证书文件。&lt;/p&gt;
&lt;p&gt;但很多时候，使用 Github 的小伙伴都会为自己的 github 首页关联一个自定义域名，例如我的 github-page 首页地址是 &lt;a href=&quot;https://kinglisky.github.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;kinglisky.github.io&lt;/a&gt; 然后绑了个自定义的域名 &lt;a href=&quot;https://nlush.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;nlush.com&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;github 的 https 正式是针对 github.io 域下的，所以咱们绑定自定的域名是不支持 https 的，如何为 github-page 自定义域名加上 https 的小绿帽呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="技能" scheme="http://ierii.com/tags/%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>VUE 组件的一点思考</title>
    <link href="http://ierii.com/2017/10/14/VUE-%E7%BB%84%E4%BB%B6%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%9D%E8%80%83/"/>
    <id>http://ierii.com/2017/10/14/VUE-组件的一点思考/</id>
    <published>2017-10-14T13:07:30.000Z</published>
    <updated>2018-04-10T08:49:14.299Z</updated>
    
    <content type="html"><![CDATA[<p>我们往组件里面塞自定义内容，常见就是用 slot ：</p><p>这里先自定义一个简单具有 slot 功能的组件：</p><p><code>slot-test.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"title"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"item"</span> <span class="attr">v-for</span>=<span class="string">"item in items"</span> <span class="attr">:text</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">export default &#123;</span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="undefined">    items: Array</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot-test</span> <span class="attr">:items</span>=<span class="string">"items"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span>组件标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">"item"</span> <span class="attr">scope</span>=<span class="string">"props"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; props.text &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">slot-test</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">export default &#123;</span></span><br><span class="line"><span class="undefined">  data () &#123;</span></span><br><span class="line"><span class="undefined">    return &#123;</span></span><br><span class="line"><span class="undefined">      items: [1, 2, 3]</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><p>slot 很方便，但是…… 有时我们没办法直接用 slot 往组件里面塞自定义内容。</p><p>比如我们有时需要将 vue 的组件转换成一个工具函数来使用：</p><p><code>util.vue</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cpt"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">export default &#123;</span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="undefined">    title: String</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    todo () &#123;</span></span><br><span class="line"><span class="undefined">      console.log('to do someing~')</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>转成一个工具函数：</p><p><code>util.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> main <span class="keyword">from</span> <span class="string">'./util.vue'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Constructor = Vue.extend(main)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">util</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 这里的 options 其实就是组件上 props</span></span><br><span class="line">  <span class="keyword">const</span> instance = <span class="keyword">new</span> Constructor(&#123; <span class="attr">propsData</span>: options &#125;).$mount()</span><br><span class="line">  <span class="built_in">document</span>.body.appendChild(instance.$el)</span><br><span class="line">  <span class="keyword">return</span> instance</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ins = util(&#123; <span class="attr">title</span>: <span class="string">'工具函数哦~'</span> &#125;)</span><br><span class="line">ins.todo()</span><br></pre></td></tr></table></figure></p><p>是不是没办法直接往里面塞 <code>slot</code> 了， 所以这里我们可能会倾向通过 <code>props</code> 传组件进行渲染，所以但组件作为工具函数使用时，我们可能会使用 <code>&lt;component&gt;</code> 组件。</p><p>可以看一波文档 <a href="https://cn.vuejs.org/v2/api/#component" target="_blank" rel="noopener">https://cn.vuejs.org/v2/api/#component</a>。</p><p><code></code>component<code>的</code>is<code>属性可以是：</code>string | ComponentDefinition | ComponentConstructor`</p><p>所以我们可以将组件写成这样：</p><p><code>util.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cpt"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">component</span> <span class="attr">v-if</span>=<span class="string">"customCpt"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:is</span>=<span class="string">"customCpt"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-bind</span>=<span class="string">"customProps"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="javascript">    title: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    customCpt: [<span class="built_in">String</span>, <span class="built_in">Object</span>],</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    customProps: <span class="built_in">Object</span></span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    todo () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'to do someing~'</span>)</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里小小提示一下 <code>v-bind</code> 是可以直接绑定一个对象的。</p><p>平时我们可能会这样写：</p><p><code>&lt;cpt :name=&quot;name&quot; :value=&quot;value&quot;&gt;&lt;/cpt&gt;</code></p><p>但是可以通过 <code>v-bind</code>直接绑定一个对象：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cpt</span> <span class="attr">v-bind</span>=<span class="string">"&#123; name: 'name', value: 'value' &#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpt</span>&gt;</span></span><br></pre></td></tr></table></figure><p>两种写法是一样的，但是有的时候不考虑组件特定的 props 属性时，这样做会方便很多。</p><p>使用时，我们可以先自定义一个组件</p><p><code>custom-cpt.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="built_in">String</span></span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在工具函数可以这样使用：</p><p><code>util.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> CustomCpt <span class="keyword">from</span> <span class="string">'components/custom-cpt.vue'</span></span><br><span class="line"><span class="keyword">const</span> ins = util(&#123;</span><br><span class="line">  title: <span class="string">'工具函数哦~'</span>,</span><br><span class="line">  customCpt: CustomCpt,</span><br><span class="line">  customProps: &#123; <span class="attr">name</span>: <span class="string">'我是自定义组件'</span> &#125;</span><br><span class="line">&#125;)</span><br><span class="line">ins.todo()</span><br></pre></td></tr></table></figure><p>这样就可已通过将自定义的组件传入进行自定义渲染了。</p><p>然后我们再稍微改装一下，让自定义渲染函数也支持 <code>render</code> 函数：</p><p><code>util.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cpt"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">component</span> <span class="attr">v-if</span>=<span class="string">"customCpt"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:is</span>=<span class="string">"customCrater"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-bind</span>=<span class="string">"customProps"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="javascript">    title: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    customCpt: [<span class="built_in">String</span>, <span class="built_in">Object</span>, <span class="built_in">Function</span>],</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    customProps: <span class="built_in">Object</span></span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">  computed: &#123;</span></span><br><span class="line"><span class="undefined">    customCrater () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> customCpt = <span class="keyword">this</span>.customCpt</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">typeof</span> customCpt === <span class="string">'function'</span></span></span><br><span class="line"><span class="javascript">        ? &#123; <span class="attr">render</span>: customCpt &#125; <span class="comment">// 其实就是将 render 函数包装成一个组件</span></span></span><br><span class="line"><span class="undefined">        : customCpt</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    todo () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'to do someing~'</span>)</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后我们就可可以通过 render 函数进行自定义渲染：</p><p><code>util.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ins = util(&#123;</span><br><span class="line">  title: <span class="string">'工具函数哦~'</span>,</span><br><span class="line">  customCpt (h) &#123;</span><br><span class="line">    <span class="keyword">return</span> h(<span class="string">'button'</span>, <span class="string">'自定义按钮'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">ins.todo()</span><br></pre></td></tr></table></figure><p>解决完组件 props 问题，然后就是将组件内部事件处理了。</p><p>简单的处理方式就是通过 props 将事件处理一并函数传入：</p><p><code>custom-cpt.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> @<span class="attr">click</span>=<span class="string">"handler"</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">    handler: <span class="built_in">Function</span> <span class="comment">// 通过 props 将处理函数传入</span></span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后酱紫使用：</p><p><code>util.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ins = util(&#123;</span><br><span class="line">  title: <span class="string">'工具函数哦~'</span>,</span><br><span class="line">  customCpt: CustomCpt,</span><br><span class="line">  customProps: &#123;</span><br><span class="line">    name: <span class="string">'我是自定义组件'</span>,</span><br><span class="line">    handler () &#123;</span><br><span class="line">      <span class="comment">// 这里其实传入到了自定义的组将内部了</span></span><br><span class="line">      alert(<span class="string">'哈哈哈哈😁'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">ins.todo()</span><br></pre></td></tr></table></figure><p>内部组件 emit 的时间怎么处理呢？</p><p><code>custom-cpt.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> @<span class="attr">click</span>=<span class="string">"handler"</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">    handler: <span class="built_in">Function</span></span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">  mounted () &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">this</span>.$emit(<span class="string">'test'</span>) <span class="comment">// 这里 emit 一个事件</span></span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>简单的方式就是通过全局的 <code>event bus</code>，来处理，不过组件内部的事件也只能写成 <code>event bus</code> 触发了，但可能有些同学不太喜欢这样做。</p><p>这里我们可以借用一下 v-on 的对象语法（<a href="https://cn.vuejs.org/v2/api/#v-on" target="_blank" rel="noopener">2.4 新增</a>）：</p><p><code>utl.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cpt"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">component</span> <span class="attr">v-if</span>=<span class="string">"customCpt"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:is</span>=<span class="string">"customCrater"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-bind</span>=<span class="string">"customProps"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-on</span>=<span class="string">"listeners"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- v-on="listeners" 直接绑定了一个配置对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="javascript">    title: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    customCpt: [<span class="built_in">String</span>, <span class="built_in">Object</span>, <span class="built_in">Function</span>],</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    customProps: <span class="built_in">Object</span>,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    listeners: <span class="built_in">Object</span> <span class="comment">// v-on 绑定的时间监听对象</span></span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">  computed: &#123;</span></span><br><span class="line"><span class="undefined">    customCrater () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> customCpt = <span class="keyword">this</span>.customCpt</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">typeof</span> customCpt === <span class="string">'function'</span></span></span><br><span class="line"><span class="undefined">        ? &#123; render: customCpt &#125;</span></span><br><span class="line"><span class="undefined">        : customCpt</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    todo () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'to do someing~'</span>)</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用时可以这样：</p><p><code>util.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> CustomCpt <span class="keyword">from</span> <span class="string">'components/custom-cpt.vue'</span></span><br><span class="line"><span class="keyword">const</span> ins = util(&#123;</span><br><span class="line">  title: <span class="string">'工具函数哦~'</span>,</span><br><span class="line">  customCpt: CustomCpt,</span><br><span class="line">  customProps: &#123;</span><br><span class="line">    name: <span class="string">'我是自定义组件'</span>,</span><br><span class="line">    handler () &#123;</span><br><span class="line">      alert(<span class="string">'哈哈哈哈😁'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 这里可以配置内部组件的事件监听</span></span><br><span class="line">  listeners: &#123;</span><br><span class="line">    test () &#123;</span><br><span class="line">      alert(<span class="string">'test'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// .... 其他事件监听</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">ins.todo()</span><br></pre></td></tr></table></figure><p><code>component</code> 真是一个很好用的组件，配合 <code>v-bind</code>v-on <code>$attrs 与</code>$listeners` 这一类的用法简直无敌有没有。</p><p>嘛记录一些小想法，组件封装与 API 设计是门大学问。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们往组件里面塞自定义内容，常见就是用 slot ：&lt;/p&gt;
&lt;p&gt;这里先自定义一个简单具有 slot 功能的组件：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;slot-test.vue&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;slot&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;slot&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;slot&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;item&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;item in items&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;slot&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;export default &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;  props: &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;    items: Array&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;slot-test&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;:items&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;items&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;slot&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;组件标题&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;slot&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;item&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;scope&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;props&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; props.text &amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;slot-test&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;export default &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;  data () &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;    return &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;      items: [1, 2, 3]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="技能" scheme="http://ierii.com/tags/%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>CP 20.5</title>
    <link href="http://ierii.com/2017/08/29/CP-20-5/"/>
    <id>http://ierii.com/2017/08/29/CP-20-5/</id>
    <published>2017-08-29T13:07:10.000Z</published>
    <updated>2018-09-03T16:08:38.799Z</updated>
    
    <content type="html"><![CDATA[<h1 id="comicup-20-5"><a href="#comicup-20-5" class="headerlink" title="comicup 20.5"></a>comicup 20.5</h1><p><img src="/img/cp20.5/1.png" alt=""><br><a id="more"></a><br><img src="/img/cp20.5/2.png" alt=""><br><img src="/img/cp20.5/3.png" alt=""><br><img src="/img/cp20.5/4.png" alt=""><br><img src="/img/cp20.5/5.png" alt=""><br><img src="/img/cp20.5/6.png" alt=""><br><img src="/img/cp20.5/7.png" alt=""><br><img src="/img/cp20.5/8.png" alt=""><br><img src="/img/cp20.5/9.png" alt=""><br><img src="/img/cp20.5/10.png" alt=""><br><img src="/img/cp20.5/11.png" alt=""><br><img src="/img/cp20.5/12.png" alt=""><br><img src="/img/cp20.5/13.png" alt=""><br><img src="/img/cp20.5/14.png" alt=""><br><img src="/img/cp20.5/15.png" alt=""><br><img src="/img/cp20.5/16.png" alt=""><br><img src="/img/cp20.5/17.png" alt=""><br><img src="/img/cp20.5/18.png" alt=""><br><img src="/img/cp20.5/19.png" alt=""><br><img src="/img/cp20.5/20.png" alt=""><br><img src="/img/cp20.5/21.png" alt=""><br><img src="/img/cp20.5/22.png" alt=""><br><img src="/img/cp20.5/23.png" alt=""><br><img src="/img/cp20.5/24.png" alt=""><br><img src="/img/cp20.5/25.png" alt=""><br><img src="/img/cp20.5/26.png" alt=""><br><img src="/img/cp20.5/27.png" alt=""><br><img src="/img/cp20.5/28.png" alt=""><br><img src="/img/cp20.5/29.png" alt=""><br><img src="/img/cp20.5/30.png" alt=""><br><img src="/img/cp20.5/31.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;comicup-20-5&quot;&gt;&lt;a href=&quot;#comicup-20-5&quot; class=&quot;headerlink&quot; title=&quot;comicup 20.5&quot;&gt;&lt;/a&gt;comicup 20.5&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/img/cp20.5/1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="心情" scheme="http://ierii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>TO THE MOON</title>
    <link href="http://ierii.com/2017/08/19/TO-THE-MOON/"/>
    <id>http://ierii.com/2017/08/19/TO-THE-MOON/</id>
    <published>2017-08-19T15:36:40.000Z</published>
    <updated>2018-09-03T16:08:38.799Z</updated>
    
    <content type="html"><![CDATA[<p><code>&quot;我想去月球&quot;</code></p><p><code>&quot;你为什么想去月球呢？&quot;</code></p><p><code>“我也不知道，就是想去。”</code></p><p><img src="/img/to_the_moon/to_the_moon2.jpg" alt=""></p><a id="more"></a><p>这是游戏的开端，当我玩完游戏，才明白男主想去月球的理由，然后也给这个游戏打上我心中最高游戏的标签。有很多想表达的，笔拙不知道怎么表达。</p><p>随便扯两句……</p><p>玩游戏的过程中，随着记忆的跳跃，跳跃到男主和女主第一次相遇的在游乐场附近的灯塔，患有孤独症的女主，第一次与人分享她的的世界。或是漫天的繁星，或是远处的灯塔，这在普通人眼里可能只是普通的风景，但对于女主而言却是她世界中最宝贵一份礼物。而此刻她终于有机会与人分享她的世界，从此立下的誓言也就显得刻骨铭心了：</p><blockquote><p>看那儿。<br>知道吗？天上有无数盏灯嗯。<br>你刚才说这是你的位置吧？<br>我只在狂欢节才来。<br>你不喜欢人多的地方吗？<br>我也不喜欢。<br>……………………<br>就像天上的星星，从这里看过去它们都差不多，但这并不会减少它们的美丽。<br>我也这么觉得。那么你认为这些星星是什么呢？<br>我从未告诉任何人，但我一直认为它们是灯塔。成千上万的灯塔……闪耀着屹立在世界尽头。<br>哇，那上面一定充满活力，热闹喧哗。<br>不是这样的，它们看得到彼此，想交流聊天。可他们无能为力。他们天各一方，无法听清对方的呼唤。它们能做的……唯有努力地绽放光芒。让那光芒照耀着其他灯塔，也照耀着我。<br>为什么是你？<br>因为总有一天……我也会成为他们的朋友。<br>你明年还会来吗？<br>会的。老时间？老地点？<br>嗯。如果你忘记了，或是走丢了呢？<br>那么我们总会在月亮上相遇的。</p></blockquote><p><strong>嗯。如果你忘记了，或是走丢了呢？</strong><br><strong>那么我们总会在月亮上相遇的。</strong></p><p>记得《龙族》里的有个片段是这样的：</p><blockquote><p>摆轻松熊的时候他无意中把这件小玩具翻了过来，看见底部的标签，“Sakura &amp; 绘梨衣 の Rilakkuma”，Sakura和绘梨衣的轻松熊。<br>他努力保持的镇静瞬间被打破了，用颤抖地手把每个小玩具反过来看它们的底部：“Sakura &amp; 绘梨衣 の HelloKitty”、“Sakura &amp; 绘梨衣 の Duck”、“Sakura &amp; 绘梨衣のKiiroitori”、“Sakura &amp; 绘梨衣のKeroro”……所有玩具的标签都被换过了，所有玩具都被标明是Sakura和绘梨衣共有的，整个世界都是他们共有的……这个女孩拥有的世界就这么大这么多，她第一次把这个世界跟人分享。<br>你以为她是公主她拥有全世界，可她以为她只拥有你和她的玩具们。</p></blockquote><p>玩游戏的时候，女主 <code>river</code>  给我的感觉真的好像《龙族》里的小怪兽，着实让人心疼。</p><p>特别喜欢一个《to the moon》 的同人作品，就是因为这个 PV 我才去玩的游戏的：<a href="https://www.bilibili.com/video/av8785341/" target="_blank" rel="noopener">β受体阻滞剂与星辰</a></p><p>然后安利一下：<a href="https://www.zhihu.com/question/20712730" target="_blank" rel="noopener">你在玩《去月球》（To The Moon）的时候有何感悟？</a></p><p>特别喜欢 <strong>TO THE MOON</strong> 这款游戏，找了几张游戏的同人图。</p><p><img src="/img/to_the_moon/to_the_moon1.jpg" alt=""><br><img src="/img/to_the_moon/to_the_moon3.png" alt=""><br><img src="/img/to_the_moon/to_the_moon4.jpg" alt=""><br><img src="/img/to_the_moon/to_the_moon5.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;&amp;quot;我想去月球&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;你为什么想去月球呢？&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;“我也不知道，就是想去。”&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/to_the_moon/to_the_moon2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="心情" scheme="http://ierii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>配色小解</title>
    <link href="http://ierii.com/2017/08/08/%E9%85%8D%E8%89%B2%E5%B0%8F%E8%A7%A3/"/>
    <id>http://ierii.com/2017/08/08/配色小解/</id>
    <published>2017-08-08T02:44:47.000Z</published>
    <updated>2018-04-10T08:49:14.300Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一些简单的概念"><a href="#一些简单的概念" class="headerlink" title="一些简单的概念"></a>一些简单的概念</h2><p><a href="http://www.uisdc.com/head-first-color-theory" target="_blank" rel="noopener">参考原文</a></p><p><strong>原色：</strong></p><p><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image00119.jpg" alt="色环"></p><p>所有颜色的源头被称为三原色，三原色指的是红色、黄色和蓝色。如果我们谈论的是屏幕的显示颜色，比如显示器，三原色则分别是红色、绿色和蓝色，也就是我们熟悉的 <a href="https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8E%9F%E8%89%B2%E5%85%89%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener">RGB</a>。然后印刷业有另外一套标准 <a href="https://zh.wikipedia.org/wiki/%E5%8D%B0%E5%88%B7%E5%9B%9B%E5%88%86%E8%89%B2%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener">CMYK</a>。</p><a id="more"></a><p><strong>间色（混合色）：</strong></p><p><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image00220.jpg" alt="间色"></p><p>如果将红色和黄色、黄色和蓝色、蓝色和红色均匀混合，就会创建三种间色：绿色、橙色和紫色。将这些颜色应用进项目中，可以提供很强烈的对比。</p><p><strong>三级颜色：</strong></p><p><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image00312.jpg" alt="三级颜色"></p><p>三次色来源于间色与原色的混合，主要有：红紫色、蓝紫色、蓝绿色、黄绿色、橙红色和橙黄色。</p><p><strong>互补色：</strong></p><p><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image00420.jpg" alt="互补色"><br><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image00513.jpg" alt="互补色"></p><p>互补色是指色轮上那些呈180°角的颜色。比如蓝色和橙色、红色和绿色、黄色和紫色等。互补色有非常强烈的对比度，在颜色饱和度很高的情况下，可以创建很多十分震撼的视觉效果。</p><p><strong>相似色：</strong></p><p><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image00618.jpg" alt="相似色"><br><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image00711.jpg" alt="相似色"></p><p>相似色是指在色轮上相邻的三个颜色。相似色是选择相近颜色时十分不错的方法，可以在同一个色调中制造丰富的质感和层次。一些很好的色彩组合有：蓝绿色、蓝色和蓝紫色；还有黄绿色、黄色和橘黄色。</p><p><strong>三角色：</strong><br><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image00819.jpg" alt="三角色"><br><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image00914.jpg" alt="三角色"></p><p>三角色也是一组颜色。是通过在色环上创建一个等边三角形来取出的一组颜色，可以让作品的颜色很丰富。</p><p><strong>分散的互补色：</strong></p><p><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image01015.jpg" alt="分散的互补色"></p><p>分散的互补色和互补色的区别在于分散的互补色并不是取目标颜色正对面的颜色。拿上面的图做例子来说吧，黄色的互补色应该是紫色，但是我们取紫色旁边的两个颜色——紫红色和蓝紫色。这样子不仅可以有一个强烈的对比度，而且还可以让颜色更丰富。</p><p><strong>四方色：</strong></p><p><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image01112.jpg" alt="四方色"></p><p>四方色是在色轮上画一个正方形，取四个角的颜色。在上面的例子中是：紫红色、橙黄色、黄绿色和蓝紫色。这个颜色真的超棒的，不信可以自己用用感受一下，尤其是使用其中一个颜色作为主色，其他的三个颜色作为辅助色的时候。</p><p><strong>四方补色：</strong></p><p><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image01214.jpg" alt="四方补色"></p><p>四方补色和四方色的差别在于四方补色采用的是一个矩形。通过一组互补色两旁的颜色建立的色彩组合。如上图中的互补色橙色和蓝色，分别选用他们两旁的颜色来建立矩形，最终取得橙红色、橙黄色、蓝绿色和蓝紫色。</p><p><strong>明暗：</strong></p><p><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image0138.jpg" alt="明暗"></p><p>颜色的色调也可以影响颜色给人的感觉，就拿上图的蓝色来说，第一张是原图，第二张添加了白色，第三张添加了黑色，同样的蓝色产生了不同的感觉。在实际应用中，可以在采用单色配色方案时，通过改变颜色的色调来创建不同的感觉。</p><p><strong>暖色：</strong></p><p><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image01411.jpg" alt="暖色"></p><p>暖色可以创造温暖的感觉，暖色通常会让人联想起太阳、火焰和爱情。红色是血的颜色，感觉是温暖的，橙色和黄色会给人夏天的感觉。给图像添加一个橙色的滤镜，图像看起来就会有温馨快乐的感觉。</p><p><strong>冷色：</strong></p><p><img src="http://image.uisdc.com/wp-content/uploads/2014/08/clip_image0158.jpg" alt="冷色"></p><p>冷色也有其独特的含义，通常会让人联想起凉爽的气候、冬季、死亡、悲伤、冰、夜晚和水这些事物。冷色可以给人平静、安宁、新人、干净的感觉。紫色与尊贵经常联系在一起，看起来十分内敛。</p><h2 id="配色方法"><a href="#配色方法" class="headerlink" title="配色方法"></a>配色方法</h2><p><strong>色相的搭配方式：</strong></p><p>色相环上所有色彩的变化，或是色彩与色彩之间的差异，都以“平均”的方式做配置。也就是说，从这个色相环中，无论以正三角形或正方形选择色彩作组合，选出的色彩彼此间差异都是均等的，整体设计便自然呈现协调的状态。</p><p><strong>从自然中取得协调的配色：</strong></p><p>人类对于平常看习惯的事物都会认为是安全的事物，一直被安全的事物包围着，我们就能够过着心情安稳的生活。既然大自然是从久远的太古以来人类已经看习惯的颜色，那么就举出一些将自热中存在的配色与熟悉的风景色彩，并结合设计来活学活用吧。</p><h2 id="安利一些工具："><a href="#安利一些工具：" class="headerlink" title="安利一些工具："></a>安利一些工具：</h2><ul><li><p><a href="https://color.adobe.com/zh/" target="_blank" rel="noopener">ADOBE COLOR</a>.</p></li><li><p><a href="http://nipponcolors.com/" target="_blank" rel="noopener">配色网站</a></p></li></ul><h2 id="Web-内容无障碍指南-WCAG"><a href="#Web-内容无障碍指南-WCAG" class="headerlink" title="Web 内容无障碍指南 (WCAG)"></a>Web 内容无障碍指南 (WCAG)</h2><blockquote><p>Web内容无障碍指南（WCAG）2.0涵盖范围广泛，涉及了一些建议，这些建议可使Web内容更容易访问。遵循这些原则，能够让内容更易为广大残障人士所接受，包括失明和低视力、失聪和重听、学习障碍、认知障碍、行动不便、言语残疾、光过敏患者和这些病症的复合患者。遵循这些原则也可让普通用户更容易访问您的Web内容。 – 摘要</p></blockquote><p>WEB 配色也应该满足标准。<a href="https://www.w3.org/Translations/WCAG20-zh/" target="_blank" rel="noopener">https://www.w3.org/Translations/WCAG20-zh/</a></p><p><strong>颜色对比度：</strong></p><p>我们平时配色时应该满足 WCAG 的标准，WCAG 2.0 有一项对比度的标准，其要求对比度应当满足 4.5:1 的最小对比度（AA 级）。</p><p>这里有一个好用的工具：<a href="http://leaverou.github.io/contrast-ratio/#%23000-on-white" target="_blank" rel="noopener">色彩对比值校验工具</a></p><h2 id="颜色的意义"><a href="#颜色的意义" class="headerlink" title="颜色的意义"></a>颜色的意义</h2><h2 id="简单实现"><a href="#简单实现" class="headerlink" title="简单实现"></a>简单实现</h2><p><strong>rgb -&gt; hex</strong></p><p>简单直白，取 r g a 的颜色值直接输出他的 16 进制：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">componentToHex</span> (<span class="params">c</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> hex = c.toString(<span class="number">16</span>)</span><br><span class="line">  <span class="keyword">return</span> hex.length == <span class="number">1</span> ? <span class="string">'0'</span> + hex : hex</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rgbToHex</span> (<span class="params">r, g, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'#'</span> + componentToHex(r) + componentToHex(g) + componentToHex(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>位运算：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rgbToHex</span> (<span class="params">r, g, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'#'</span> + ((<span class="number">1</span> &lt;&lt; <span class="number">24</span>) + (r &lt;&lt; <span class="number">16</span>) + (g &lt;&lt; <span class="number">8</span>) + b).toString(<span class="number">16</span>).slice(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>hex -&gt; rgb</strong></p><p>正则实现的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hexToRgb</span> (<span class="params">hex</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Expand shorthand form (e.g. "03F") to full form (e.g. "0033FF")</span></span><br><span class="line">  <span class="keyword">var</span> shorthandRegex = <span class="regexp">/^#?([a-f\d])([a-f\d])([a-f\d])$/i</span></span><br><span class="line">  hex = hex.replace(shorthandRegex, <span class="function"><span class="keyword">function</span> (<span class="params">m, r, g, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> r + r + g + g + b + b</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> result = <span class="regexp">/^#?([a-f\d]&#123;2&#125;)([a-f\d]&#123;2&#125;)([a-f\d]&#123;2&#125;)$/i</span>.exec(hex)</span><br><span class="line">  <span class="keyword">return</span> result ? &#123;</span><br><span class="line">    r: <span class="built_in">parseInt</span>(result[<span class="number">1</span>], <span class="number">16</span>),</span><br><span class="line">    g: <span class="built_in">parseInt</span>(result[<span class="number">2</span>], <span class="number">16</span>),</span><br><span class="line">    b: <span class="built_in">parseInt</span>(result[<span class="number">3</span>], <span class="number">16</span>)</span><br><span class="line">  &#125; : <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>位运算：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hexToRgb</span>(<span class="params">hex</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bigint = <span class="built_in">parseInt</span>(hex, <span class="number">16</span>);</span><br><span class="line">    <span class="keyword">var</span> r = (bigint &gt;&gt; <span class="number">16</span>) &amp; <span class="number">255</span>;</span><br><span class="line">    <span class="keyword">var</span> g = (bigint &gt;&gt; <span class="number">8</span>) &amp; <span class="number">255</span>;</span><br><span class="line">    <span class="keyword">var</span> b = bigint &amp; <span class="number">255</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> r + <span class="string">","</span> + g + <span class="string">","</span> + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个实现很巧妙：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hexToRgbNew</span> (<span class="params">hex</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> arrBuff = <span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>(<span class="number">4</span>)</span><br><span class="line">  <span class="keyword">var</span> vw = <span class="keyword">new</span> <span class="built_in">DataView</span>(arrBuff)</span><br><span class="line">  vw.setUint32(<span class="number">0</span>, <span class="built_in">parseInt</span>(hex, <span class="number">16</span>), <span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">var</span> arrByte = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(arrBuff)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> arrByte[<span class="number">1</span>] + <span class="string">','</span> + arrByte[<span class="number">2</span>] + <span class="string">','</span> + arrByte[<span class="number">3</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>hexoToHS：</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hexToHSL</span> (<span class="params">hex</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> result = <span class="regexp">/^#?([a-f\d]&#123;2&#125;)([a-f\d]&#123;2&#125;)([a-f\d]&#123;2&#125;)$/i</span>.exec(hex)</span><br><span class="line">  r = <span class="built_in">parseInt</span>(result[<span class="number">1</span>], <span class="number">16</span>)</span><br><span class="line">  g = <span class="built_in">parseInt</span>(result[<span class="number">2</span>], <span class="number">16</span>)</span><br><span class="line">  b = <span class="built_in">parseInt</span>(result[<span class="number">3</span>], <span class="number">16</span>)</span><br><span class="line">  r /= <span class="number">255</span>, g /= <span class="number">255</span>, b /= <span class="number">255</span></span><br><span class="line">  <span class="keyword">var</span> max = <span class="built_in">Math</span>.max(r, g, b), min = <span class="built_in">Math</span>.min(r, g, b)</span><br><span class="line">  <span class="keyword">var</span> h, s, l = (max + min) / <span class="number">2</span></span><br><span class="line">  <span class="keyword">if</span> (max == min) &#123;</span><br><span class="line">    h = s = <span class="number">0</span> <span class="comment">// achromatic</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> d = max - min</span><br><span class="line">    s = l &gt; <span class="number">0.5</span> ? d / (<span class="number">2</span> - max - min) : d / (max + min)</span><br><span class="line">    <span class="keyword">switch</span> (max) &#123;</span><br><span class="line">      <span class="keyword">case</span> r: h = (g - b) / d + (g &lt; b ? <span class="number">6</span> : <span class="number">0</span>); <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> g: h = (b - r) / d + <span class="number">2</span>; <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> b: h = (r - g) / d + <span class="number">4</span>; <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">    h /= <span class="number">6</span></span><br><span class="line">  &#125;</span><br><span class="line">  h = (<span class="number">360</span> * h).toFixed(<span class="number">3</span>)</span><br><span class="line">  s = (<span class="number">100</span> * s).toFixed(<span class="number">3</span>)</span><br><span class="line">  l = (<span class="number">100</span> * l).toFixed(<span class="number">3</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`hsl(<span class="subst">$&#123;h&#125;</span>, <span class="subst">$&#123;s&#125;</span>%, <span class="subst">$&#123;l&#125;</span>%)`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这些实现都在这 <a href="https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb" target="_blank" rel="noopener">RGB 与 16 进制颜色的转换</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一些简单的概念&quot;&gt;&lt;a href=&quot;#一些简单的概念&quot; class=&quot;headerlink&quot; title=&quot;一些简单的概念&quot;&gt;&lt;/a&gt;一些简单的概念&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.uisdc.com/head-first-color-theory&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原色：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.uisdc.com/wp-content/uploads/2014/08/clip_image00119.jpg&quot; alt=&quot;色环&quot;&gt;&lt;/p&gt;
&lt;p&gt;所有颜色的源头被称为三原色，三原色指的是红色、黄色和蓝色。如果我们谈论的是屏幕的显示颜色，比如显示器，三原色则分别是红色、绿色和蓝色，也就是我们熟悉的 &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8E%9F%E8%89%B2%E5%85%89%E6%A8%A1%E5%BC%8F&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RGB&lt;/a&gt;。然后印刷业有另外一套标准 &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%8D%B0%E5%88%B7%E5%9B%9B%E5%88%86%E8%89%B2%E6%A8%A1%E5%BC%8F&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CMYK&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技能" scheme="http://ierii.com/tags/%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>CHINA JOY</title>
    <link href="http://ierii.com/2017/07/29/CHINA-JOY/"/>
    <id>http://ierii.com/2017/07/29/CHINA-JOY/</id>
    <published>2017-07-29T14:44:14.000Z</published>
    <updated>2018-09-03T16:08:38.800Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/china_joy/01.jpeg" alt=""></p><p>嘛，第一次逛 China Joy 还是很开心的，整整走了一天，累惨了。</p><p>会展上游戏体验很多，不过得排好久的队，会馆也好几个，一天下来够呛。随后拍了了一些相片，小姐姐们真的很漂亮。有机会继续。</p><a id="more"></a><p><img src="/img/china_joy/02.jpeg" alt=""></p><p>额上面的 APP 叫 《告白小人》挺好玩的，无聊可以当表情包用。</p><p>漂亮的小姐姐们：</p><p><img src="/img/china_joy/0.jpeg" alt=""><br><img src="/img/china_joy/1.jpeg" alt=""></p><p>上面两张超级对味的</p><p><img src="/img/china_joy/2.jpeg" alt=""><br><img src="/img/china_joy/3.jpeg" alt=""><br><img src="/img/china_joy/4.jpeg" alt=""><br><img src="/img/china_joy/5.jpeg" alt=""><br><img src="/img/china_joy/6.jpeg" alt=""><br><img src="/img/china_joy/7.jpeg" alt=""><br><img src="/img/china_joy/8.jpeg" alt=""></p><p>2B 小姐姐</p><p><img src="/img/china_joy/9.jpeg" alt=""><br><img src="/img/china_joy/10.jpeg" alt=""><br><img src="/img/china_joy/11.jpeg" alt=""><br><img src="/img/china_joy/12.jpeg" alt=""><br><img src="/img/china_joy/13.jpeg" alt=""><br><img src="/img/china_joy/14.jpeg" alt=""></p><p>B 站有搞 FGO 的活动，VR 合影，EX 咖喱棒！</p><p><img src="/img/china_joy/15.jpeg" alt=""><br><img src="/img/china_joy/16.jpeg" alt=""><br><img src="/img/china_joy/17.jpeg" alt=""><br><img src="/img/china_joy/18.jpeg" alt=""><br><img src="/img/china_joy/19.jpeg" alt=""><br><img src="/img/china_joy/20.jpeg" alt=""><br><img src="/img/china_joy/21.jpeg" alt=""><br><img src="/img/china_joy/22.jpeg" alt=""></p><p>好吧，还是喜欢看小姐姐，游戏也挺好玩，有机会下次还去。</p><p><img src="/img/china_joy/00.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/china_joy/01.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;嘛，第一次逛 China Joy 还是很开心的，整整走了一天，累惨了。&lt;/p&gt;
&lt;p&gt;会展上游戏体验很多，不过得排好久的队，会馆也好几个，一天下来够呛。随后拍了了一些相片，小姐姐们真的很漂亮。有机会继续。&lt;/p&gt;
    
    </summary>
    
    
      <category term="心情" scheme="http://ierii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>风霜断面</title>
    <link href="http://ierii.com/2017/07/26/%E9%A3%8E%E9%9C%9C%E6%96%AD%E9%9D%A2/"/>
    <id>http://ierii.com/2017/07/26/风霜断面/</id>
    <published>2017-07-25T17:06:26.000Z</published>
    <updated>2018-09-03T16:08:38.799Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/bg0.jpg" alt="风霜断面"></p><p>最听一直无脑循环的一首歌，特别的喜欢</p><p>风霜断面</p><p>词曲/Kevinz</p><p>谁未曾理想 踏尽命途亦可得敝帚珍藏<br>迷津片段若相遇亦可是陌生眉眼跌撞<br>谁又用心以一苇渡航 空收集一方沉塘<br>繁复命运仍可巧妙化简分割断裂消亡</p><a id="more"></a><p>任生命 无序抑扬<br>雾中仍八面方向<br>冻雨击破头颅几次才可退后虑想纠集繁杂过往</p><p>我本翻越千重万覆高山深渊身亦遭重创<br>失意是陌路只一扇通透不碎窗<br>却无端恋上其中周遭莽撞 如冰山中火光<br>凭此谁又不可深入荆丛割遍体伤</p><p>我本跋涉千艰万险冻地炎群曦盏换星芒<br>却只见木纹次第撰写这绮丽炎凉<br>抑或用尽这一生颠沛跌宕 刻画心字形状<br>最终燃尽那刻定明亮似个彼方</p><p>谁未曾理想 踏尽命途亦可得敝帚珍藏<br>迷津片段若相遇亦可是陌生眉眼跌撞<br>谁又用心以一苇渡航 空收集一方沉塘<br>繁复命运仍可巧妙化简分割断裂消亡</p><p>任牵绊 逻辑未当<br>未来仍隐约可望<br>只是那注定的若了悟结果又如何经历而无杂想</p><p>我本翻越千重万覆高山深渊身亦遭重创<br>失意是陌路只一扇通透不碎窗<br>却无端恋上其中周遭莽撞 如冰山中火光<br>凭此谁又不可深入荆丛割遍体伤</p><p>我本跋涉千艰万险冻地炎群曦盏换星芒<br>却只见木纹次第撰写这绮丽炎凉<br>抑或用尽这一生颠沛跌宕 刻画心字形状<br>最终燃尽那刻定明亮似个彼方</p><p>我本停驻丹蔷花海恣意轮舞尖刺间放旷<br>又有绝美幻象邀我共享这鸩酿<br>用曾时构建过简易乌托邦 换刻庭暖花香<br>便算风中耳语也渐变温热悠扬</p><p>当极夜降至旖旎这刹风光 或建架草收场<br>谁难得凭真实感想领意念疏狂<br>我仍可笑容天真不动声响 舐温血以弥伤<br>凛冽凌乱尽头或有休憩眠月港</p><iframe src="//music.163.com/outchain/player?type=2&id=447943652&auto=1&height=66" "="" width="[330]" height="[86]" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/bg0.jpg&quot; alt=&quot;风霜断面&quot;&gt;&lt;/p&gt;
&lt;p&gt;最听一直无脑循环的一首歌，特别的喜欢&lt;/p&gt;
&lt;p&gt;风霜断面&lt;/p&gt;
&lt;p&gt;词曲/Kevinz&lt;/p&gt;
&lt;p&gt;谁未曾理想 踏尽命途亦可得敝帚珍藏&lt;br&gt;迷津片段若相遇亦可是陌生眉眼跌撞&lt;br&gt;谁又用心以一苇渡航 空收集一方沉塘&lt;br&gt;繁复命运仍可巧妙化简分割断裂消亡&lt;/p&gt;
    
    </summary>
    
    
      <category term="音乐" scheme="http://ierii.com/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>花雨效果</title>
    <link href="http://ierii.com/2017/06/23/anohana/"/>
    <id>http://ierii.com/2017/06/23/anohana/</id>
    <published>2017-06-23T15:42:59.000Z</published>
    <updated>2018-04-10T08:49:14.299Z</updated>
    
    <content type="html"><![CDATA[<p>很喜欢 《那朵花》基于 canvas 写了一个五毛的 ED 花雨特效。</p><p><img src="//dn-cnode.qbox.me/Fk9vMsS6OlHZ-qMTvClpJRcmXc3Z" alt="截图"></p><a id="more"></a><p>chrome 上效果比较好，在线效果看下面：<br><a href="http://kinglisky.github.io/bloom/anohana" target="_blank" rel="noopener">http://kinglisky.github.io/bloom/anohana</a><br><a href="https://codepen.io/kinglisky/pen/JJJYXj" target="_blank" rel="noopener">https://codepen.io/kinglisky/pen/JJJYXj</a><br><a href="https://codepen.io/kinglisky/pen/mwwWmj" target="_blank" rel="noopener">https://codepen.io/kinglisky/pen/mwwWmj</a></p><p>源码在这里：</p><p><a href="https://github.com/kinglisky/bloom/tree/master/anohana" target="_blank" rel="noopener">https://github.com/kinglisky/bloom/tree/master/anohana</a></p><p>ED 是这样，<a href="http://www.bilibili.com/video/av3967393/#page=3" target="_blank" rel="noopener">http://www.bilibili.com/video/av3967393/#page=3</a></p><p>写了一篇简易 <a href="https://zhuanlan.zhihu.com/p/27505939" target="_blank" rel="noopener">教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很喜欢 《那朵花》基于 canvas 写了一个五毛的 ED 花雨特效。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;//dn-cnode.qbox.me/Fk9vMsS6OlHZ-qMTvClpJRcmXc3Z&quot; alt=&quot;截图&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="技能" scheme="http://ierii.com/tags/%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>基于 WebRtc 搭建一个简单的视屏聊天室</title>
    <link href="http://ierii.com/2017/05/28/WebRtc-Chat/"/>
    <id>http://ierii.com/2017/05/28/WebRtc-Chat/</id>
    <published>2017-05-28T15:49:39.000Z</published>
    <updated>2018-04-10T08:49:14.299Z</updated>
    
    <content type="html"><![CDATA[<p>github pages 自定义域名的 https 还没配置，chrome 强制要求 WebRtc 上 https 的，这个把栗子挂 coding 了</p><p><a href="https://kingli.coding.me/echat/#/" target="_blank" rel="noopener">试一波</a> <a href="https://github.com/kinglisky/echat" target="_blank" rel="noopener">https://github.com/kinglisky/echat</a></p><p>只做成了简单的两人视频，输入同样的房间号进入同一个房间就行了，野狗或者网络的原因不成功可以换个房间试试 😁。</p><a id="more"></a><h2 id="WebRtc"><a href="#WebRtc" class="headerlink" title="WebRtc"></a>WebRtc</h2><p>维基的定义：WebRTC，名称源自网页即时通信（英语：Web Real-Time Communication）的缩写，是一个支持网页浏览器进行实时语音对话或视频对话的API。它于2011年6月1日开源并在Google、Mozilla、Opera支持下被纳入万维网联盟的W3C推荐标准</p><p>简单来说让浏览器提供JS的即时通信接口，可通过信令交换建立一个浏览器与浏览器之间（peer-to-peer）的信道，而不经过服务器直接实现浏览器之间的点对点通讯，高效的稳定的数据传输。</p><h2 id="主要的三个-API"><a href="#主要的三个-API" class="headerlink" title="主要的三个 API"></a>主要的三个 API</h2><p>MediaStream：通过 MediaStream 的 API 能够通过设备的摄像头及话筒获得视频、音频的同步流</p><p>RTCPeerConnection：RTCPeerConnection 是 WebRTC 用于构建点对点之间稳定、高效的流传输的组件</p><p>RTCDataChannel：RTCDataChannel 使得浏览器之间（点对点）建立一个高吞吐量、低延时的信道，可传输任意数据</p><p>MediaStream 提供了调用媒体设备的功能</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">getUserMedia(&#123;</span><br><span class="line">  video: <span class="literal">true</span>,</span><br><span class="line">  audio: <span class="literal">true</span></span><br><span class="line">&#125;, localMediaStream =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> video = <span class="built_in">document</span>.getElementById(<span class="string">'video'</span>)</span><br><span class="line">  video.src = <span class="built_in">window</span>.URL.createObjectURL(localMediaStream)</span><br><span class="line">  video.onloadedmetadata = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Label: '</span> + localMediaStream.label)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'AudioTracks'</span>, localMediaStream.getAudioTracks())</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'VideoTracks'</span>, localMediaStream.getVideoTracks())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Reeeejected!'</span>, e)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>获取配置的配体流数据，可通过 URL.createObjectURL(stream) 将媒体流数据输入到 video 上，P.S view 要加上 autoplay 否则不会自动播放</p><p>可通过监听 video.onloadedmetadata 事件，获取数据流的一些信息</p><p>getUserMedia 处理可以配置 video audio 还可以配置其他一些东西如</p><ul><li>视频流的分辨率 maxWidth minHeight</li><li>视频流的最小宽高比 MinAspectRatio</li><li>视频流的最大帧速率 MaxFramerate</li><li>……</li></ul><p>RTCPeerConnection</p><p>WebRTC 使用 RTCPeerConnection 来在浏览器之间传递流数据,WebRTC 使用 RTCPeerConnection 来在浏览器之间传递流数据，这个流数据通道是点对点的，不需要经过服务器进行中转。</p><p>嗯，此处敲一下黑板，但我们还是不能抛弃能抛弃服务器的，我们仍然需要它来为我们传递信令（signaling）来建立这个信道。WebRTC 没有定义用于建立信道的信令的协议：信令并不是 RTCPeerConnection API的一部分</p><p>通过 RTCPeerConnection 建立点对点链接还是有点麻烦的……</p><p>看个小栗子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用Google的 stun 服务器</span></span><br><span class="line"><span class="keyword">const</span> iceServer = &#123;</span><br><span class="line">  <span class="string">'iceServers'</span>: [&#123;</span><br><span class="line">    <span class="string">'url'</span>: <span class="string">'stun:stun.l.google.com:19302'</span></span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 与后台服务器的 WebSocket 连接</span></span><br><span class="line"><span class="keyword">const</span> socket = io()</span><br><span class="line"><span class="comment">// 创建PeerConnection实例</span></span><br><span class="line"><span class="keyword">const</span> pc = <span class="keyword">new</span> PeerConnection(iceServer)</span><br><span class="line"><span class="comment">// 发送ICE候选到其他客户端</span></span><br><span class="line">pc.onicecandidate = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">  socket.send(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">    <span class="string">'event'</span>: <span class="string">'__ice_candidate'</span>,</span><br><span class="line">    <span class="string">'data'</span>: &#123;</span><br><span class="line">      <span class="string">'candidate'</span>: event.candidate</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果检测到媒体流连接到本地，将其绑定到一个 video 标签上输出</span></span><br><span class="line">pc.onaddstream = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">  someVideoElement.src = URL.createObjectURL(event.stream)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获取本地的媒体流，并绑定到一个video标签上输出，并且发送这个媒体流给其他客户端</span></span><br><span class="line">getUserMedia(&#123;</span><br><span class="line">  <span class="string">'audio'</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">'video'</span>: <span class="literal">true</span></span><br><span class="line">&#125;, stream =&gt; &#123;</span><br><span class="line">    <span class="comment">// 发送offer和answer的函数，发送本地session描述</span></span><br><span class="line">  <span class="keyword">const</span> sendOfferFn = <span class="function"><span class="keyword">function</span> (<span class="params">desc</span>) </span>&#123;</span><br><span class="line">      pc.setLocalDescription(desc)</span><br><span class="line">      socket.send(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        <span class="string">'event'</span>: <span class="string">'__offer'</span>,</span><br><span class="line">        <span class="string">'data'</span>: &#123;</span><br><span class="line">          <span class="string">'sdp'</span>: desc</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;))</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">const</span> sendAnswerFn = <span class="function"><span class="keyword">function</span> (<span class="params">desc</span>) </span>&#123;</span><br><span class="line">      pc.setLocalDescription(desc)</span><br><span class="line">      socket.send(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        <span class="string">'event'</span>: <span class="string">'__answer'</span>,</span><br><span class="line">        <span class="string">'data'</span>: &#123;</span><br><span class="line">          <span class="string">'sdp'</span>: desc</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;))</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">// 绑定本地媒体流到video标签用于输出</span></span><br><span class="line">  myselfVideoElement.src = URL.createObjectURL(stream)</span><br><span class="line">  <span class="comment">// 向PeerConnection中加入需要发送的流</span></span><br><span class="line">  pc.addStream(stream)</span><br><span class="line">  <span class="comment">// 如果是发送方则发送一个offer信令，否则发送一个answer信令</span></span><br><span class="line">  <span class="keyword">if</span> (isCaller) &#123;</span><br><span class="line">    pc.createOffer(sendOfferFn)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    pc.createAnswer(sendAnswerFn)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, errHandler)</span><br><span class="line"><span class="comment">// 处理到来的信令</span></span><br><span class="line">socket.onmessage = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> json = <span class="built_in">JSON</span>.parse(event.data)</span><br><span class="line">  <span class="comment">// 如果是一个ICE的候选，则将其加入到 PeerConnection 中</span></span><br><span class="line">  <span class="comment">// 否则设定对方的 session 描述为传递过来的描述</span></span><br><span class="line">  <span class="keyword">if</span> (json.event === <span class="string">'__ice_candidate'</span>) &#123;</span><br><span class="line">    pc.addIceCandidate(<span class="keyword">new</span> RTCIceCandidate(json.data.candidate))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    pc.setRemoteDescription(<span class="keyword">new</span> RTCSessionDescription(json.data.sdp))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WebRTC 通过 RTCPeerConnection 建立点对点链接，最主要的是两点：</p><ul><li>信令交换</li><li>NAT/防火墙穿越</li></ul><p>信令交换主要是交换三类信息：</p><ul><li>连接控制信息：初始化或者关闭连接报告错误。</li><li>网络配置：对于外网，我们电脑的 IP 地址和端口？</li><li>多媒体数据：使用什么编码解码器，浏览器可以处理什么信息？</li></ul><p>信令的主要数据分为两部分：</p><ul><li>会话描述协议（Session Description Protocol）确定本机上的媒体流的特性，比如分辨率、编解码能力。</li><li>连接两端的主机的网络地址，NAT/防火墙穿越（ICE Candidate）</li></ul><p>下面讲一下最最主要的信令交换：</p><p>首先是 SDP 的交换：</p><p><img src="https://raw.githubusercontent.com/RWebRTC/Blog/pictures/pictures/jsep.png" alt="信息交换"></p><p>下面有 A 和 B 两个浏览器，它们交换信令的过程大概是：</p><ul><li>A 和 B 各自创建自己的 RTCPeerConnection 对象，简称PC。</li><li>A 通过 PC 所提供的 createOffer() 方法建立一个包含 A 的 SDP 描述符的 offer 信令</li><li>A 通过 PC 所提供的 setLocalDescription() 方法，将 A 的 SDP 描述符交给 A 的 PC 实例</li><li>A 将信令经过服务器发给B</li><li>B 将 A 的 offer 信令中所包含的的 SDP 描述符提取出来，通过 PC 所提供的 setRemoteDescription() 方法交给 B 的 PC 实例</li><li>B 通过 PC 所提供的 createAnswer() 方法建立一个包含 B 的 SDP 描述符 answer 信令</li><li>B 通过 PC 所提供的 setLocalDescription() 方法，将 B 的 SDP 描述符交给 B 的 PC 实例</li><li>B 将 answer 信令通过服务器发送给 A</li><li>A 接收到 B 的 answer 信令后，将其中 B 的 SDP 描述符提取出来，调用 setRemoteDescripttion() 方法交给A自己的 PC 实例</li></ul><p>简单来描述就是：</p><ul><li>A 创建 offer。</li><li>A  ——– 发送offer ——–&gt; B</li><li>B 接收 A 的 offer 并设置，并由 B 创建 anwer。</li><li>B  ——– 发送 anwer ——–&gt; A</li><li>A 接收 B 的 anwer 并设置</li></ul><p>通过在这一系列的信令交换之后，A 和 B 所创建的 PC 实例都包含 A 和 B 的 SDP 描述符了。我们还需要交换两端主机的网络地址，即 ICE Candidate 的交换</p><p>ICE 的交换其实发生在 A 和 B 的 SDP 描述符交换期间。简单来说：</p><ul><li>A 创建完 PC 实例后并为其添加 onicecandidate 事件回调。</li><li>当 A 网络候选可用时，将会调用 onicecandidate 函数，回调函数中包含 A 的 ICE 描述。</li><li>A 通过中转拂去其发送 ICE 给 B</li><li>B 接收并调用 PC 的 addIceCandidate() 将 A 的 ICE 描述符加入，从而获取到A的网络地址。</li></ul><p>ICE 交换只需要一方含有另一方的 ICE 描述就行，不需要和 SDP 交换一样需要相互交换。</p><p><a href="https://webrtc.github.io/samples/src/content/peerconnection/munge-sdp/" target="_blank" rel="noopener">看个栗子吧!</a></p><p>会话描述协议 SDP 大概长这个样子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">v=0</span><br><span class="line">o=- 6375483060215944758 2 IN IP4 127.0.0.1</span><br><span class="line">s=-</span><br><span class="line">t=0 0</span><br><span class="line">a=group:BUNDLE audio video</span><br><span class="line">a=msid-semantic: WMS d4d74bdc-e8fc-4164-b3ae-3b0297f8753a</span><br><span class="line">m=audio 9 UDP/TLS/RTP/SAVPF 111 103 104 9 0 8 106 105 13 110 112 113 126</span><br><span class="line">c=IN IP4 0.0.0.0</span><br><span class="line">a=rtcp:9 IN IP4 0.0.0.0</span><br><span class="line">a=ice-ufrag:UFws</span><br><span class="line">a=ice-pwd:z/R+qm/srgbLR4yHEMzewIO/</span><br><span class="line">a=fingerprint:sha-256 C0:0A:70:6A:3C:3A:02:93:23:DD:3E:F3:9F:EC:A3:C9:9F:4C:55:5A:C5:5D:B2:EB:C0:F1:FE:E5:DE:A3:E7:F5</span><br><span class="line">a=setup:actpass</span><br><span class="line">a=mid:audio</span><br><span class="line">a=extmap:1 urn:ietf:params:rtp-hdrext:ssrc-audio-level</span><br><span class="line">a=sendrecv</span><br><span class="line">a=rtcp-mux</span><br><span class="line">a=rtpmap:111 opus/48000/2</span><br><span class="line">a=rtcp-fb:111 transport-cc</span><br><span class="line">a=fmtp:111 minptime=10;useinbandfec=1</span><br><span class="line">a=rtpmap:103 ISAC/16000</span><br><span class="line">a=rtpmap:104 ISAC/32000</span><br><span class="line">a=rtpmap:9 G722/8000</span><br><span class="line">a=rtpmap:0 PCMU/8000</span><br><span class="line">a=rtpmap:8 PCMA/8000</span><br><span class="line">a=rtpmap:106 CN/32000</span><br><span class="line">a=rtpmap:105 CN/16000</span><br><span class="line">a=rtpmap:13 CN/8000</span><br><span class="line">a=rtpmap:110 telephone-event/48000</span><br><span class="line">a=rtpmap:112 telephone-event/32000</span><br><span class="line">a=rtpmap:113 telephone-event/16000</span><br><span class="line">a=rtpmap:126 telephone-event/8000</span><br><span class="line">a=ssrc:1772214208 cname:wR/OHdsj6KVnPajs</span><br><span class="line">a=ssrc:1772214208 msid:d4d74bdc-e8fc-4164-b3ae-3b0297f8753a 8fdf8579-2db4-4c80-b123-e8ed1e2bedfa</span><br><span class="line">a=ssrc:1772214208 mslabel:d4d74bdc-e8fc-4164-b3ae-3b0297f8753a</span><br><span class="line">a=ssrc:1772214208 label:8fdf8579-2db4-4c80-b123-e8ed1e2bedfa</span><br><span class="line">m=video 9 UDP/TLS/RTP/SAVPF 96 98 100 102 127 97 99 101 125</span><br><span class="line">c=IN IP4 0.0.0.0</span><br><span class="line">a=rtcp:9 IN IP4 0.0.0.0</span><br><span class="line">a=ice-ufrag:UFws</span><br><span class="line">a=ice-pwd:z/R+qm/srgbLR4yHEMzewIO/</span><br><span class="line">a=fingerprint:sha-256 C0:0A:70:6A:3C:3A:02:93:23:DD:3E:F3:9F:EC:A3:C9:9F:4C:55:5A:C5:5D:B2:EB:C0:F1:FE:E5:DE:A3:E7:F5</span><br><span class="line">a=setup:actpass</span><br><span class="line">a=mid:video</span><br><span class="line">a=extmap:2 urn:ietf:params:rtp-hdrext:toffset</span><br><span class="line">a=extmap:3 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time</span><br><span class="line">a=extmap:4 urn:3gpp:video-orientation</span><br><span class="line">a=extmap:5 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01</span><br><span class="line">a=extmap:6 http://www.webrtc.org/experiments/rtp-hdrext/playout-delay</span><br><span class="line">a=sendrecv</span><br><span class="line">a=rtcp-mux</span><br><span class="line">a=rtcp-rsize</span><br><span class="line">a=rtpmap:96 VP8/90000</span><br><span class="line">a=rtcp-fb:96 ccm fir</span><br><span class="line">a=rtcp-fb:96 nack</span><br><span class="line">a=rtcp-fb:96 nack pli</span><br><span class="line">a=rtcp-fb:96 goog-remb</span><br><span class="line">a=rtcp-fb:96 transport-cc</span><br><span class="line">a=rtpmap:98 VP9/90000</span><br><span class="line">a=rtcp-fb:98 ccm fir</span><br><span class="line">a=rtcp-fb:98 nack</span><br><span class="line">a=rtcp-fb:98 nack pli</span><br><span class="line">a=rtcp-fb:98 goog-remb</span><br><span class="line">a=rtcp-fb:98 transport-cc</span><br><span class="line">a=rtpmap:100 H264/90000</span><br><span class="line">a=rtcp-fb:100 ccm fir</span><br><span class="line">a=rtcp-fb:100 nack</span><br><span class="line">a=rtcp-fb:100 nack pli</span><br><span class="line">a=rtcp-fb:100 goog-remb</span><br><span class="line">a=rtcp-fb:100 transport-cc</span><br><span class="line">a=fmtp:100 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f</span><br><span class="line">a=rtpmap:102 red/90000</span><br><span class="line">a=rtpmap:127 ulpfec/90000</span><br><span class="line">a=rtpmap:97 rtx/90000</span><br><span class="line">a=fmtp:97 apt=96</span><br><span class="line">a=rtpmap:99 rtx/90000</span><br><span class="line">a=fmtp:99 apt=98</span><br><span class="line">a=rtpmap:101 rtx/90000</span><br><span class="line">a=fmtp:101 apt=100</span><br><span class="line">a=rtpmap:125 rtx/90000</span><br><span class="line">a=fmtp:125 apt=102</span><br><span class="line">a=ssrc-group:FID 1741418740 3539687233</span><br><span class="line">a=ssrc:1741418740 cname:wR/OHdsj6KVnPajs</span><br><span class="line">a=ssrc:1741418740 msid:d4d74bdc-e8fc-4164-b3ae-3b0297f8753a c9156452-3788-43b4-8d56-f0bf6af8e624</span><br><span class="line">a=ssrc:1741418740 mslabel:d4d74bdc-e8fc-4164-b3ae-3b0297f8753a</span><br><span class="line">a=ssrc:1741418740 label:c9156452-3788-43b4-8d56-f0bf6af8e624</span><br><span class="line">a=ssrc:3539687233 cname:wR/OHdsj6KVnPajs</span><br><span class="line">a=ssrc:3539687233 msid:d4d74bdc-e8fc-4164-b3ae-3b0297f8753a c9156452-3788-43b4-8d56-f0bf6af8e624</span><br><span class="line">a=ssrc:3539687233 mslabel:d4d74bdc-e8fc-4164-b3ae-3b0297f8753a</span><br><span class="line">a=ssrc:3539687233 label:c9156452-3788-43b4-8d56-f0bf6af8e624</span><br></pre></td></tr></table></figure><p>一大堆各种描述数据，有兴趣的可以去官方手册查查都什么意思<br>通过 SDP 可以确定本机上的媒体流的特性，比如分辨率、编解码能力等</p><p>另一个就是 ICE Candidate，它大体就是这个样子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">candidate:2134056857 1 udp 2122260223 10.12.36.13 59024 typ host generation 0 ufrag NAac network-id 2</span><br><span class="line"></span><br><span class="line">candidate:1184379673 1 tcp 1518214911 10.12.77.20 9 typ host tcptype active generation 0 ufrag YdMb network-id 1 network-cost 10</span><br></pre></td></tr></table></figure><p>获取浏览所处的网络环境信息，ICE Candidate 交换其实就是浏览器之间的 NAT 穿越。在处于使用了 NAT 设备的私有TCP/IP网络中的主机之间需要建立连接时需要使用 NAT 穿越技术。</p><p><img src="https://raw.githubusercontent.com/RWebRTC/Blog/pictures/pictures/dataPathways.png" alt="NAT 穿越技术"></p><p>ICE，全名叫交互式连接建立（Interactive Connectivity Establishment）,一种综合性的 NAT 穿越技术，它是一种框架，可以整合各种 NAT 穿越技术如 STUN、TURN（Traversal Using Relay NAT 中继NAT实现的穿透）</p><p>这里使用的的是 Google 的 STUN 服务器，国内野狗也有一个同样的，地址是 <code>stun:cn1-stun.wilddog.com:3478</code></p><h2 id="RTCDataChannel"><a href="#RTCDataChannel" class="headerlink" title="RTCDataChannel"></a>RTCDataChannel</h2><p>DataChannel 是建立在 PeerConnection 上的，不能单独使用，它主要用于建立一个高吞吐量、低延时的信道，可用于传输任意数据，<br>例如我们要开发一个浏览器之间传数据的 App 这个就很有用了，它可以用来传输几乎所有客户端获取到所有数据。</p><p>DataChannel使用方式几乎和WebSocket一样，有几个事件：</p><ul><li>onopen</li><li>onclose</li><li>onmessage</li><li>onerror</li></ul><p>同时它有几个状态，可以通过 readyState 获取：</p><ul><li>connecting: 浏览器之间正在试图建立 channel</li><li>open：建立成功，可以使用 send 方法发送数据了</li><li>closing：浏览器正在关闭 channel</li><li>closed：channel已经被关闭了</li></ul><p>两个暴露的方法:</p><ul><li>close(): 用于关闭 channel</li><li>send()：用于通过 channel 向对方发送数据</li></ul><p>这次聊天室应用没有用到，但它用处是非常大的。</p><h2 id="通过野狗建立后端中转服务"><a href="#通过野狗建立后端中转服务" class="headerlink" title="通过野狗建立后端中转服务"></a>通过野狗建立后端中转服务</h2><p>现在 firebase 这么方便，就不用自己在搭建 websocket 服务器转发各种信令数据了，这里用的国内的野狗服务。</p><p>数据结构大概是酱紫的：</p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/data0.png" alt="data0"></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/data1.png" alt="data1"></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/data2.png" alt="data2"></p><p>用户进入的房间号是 room，room 下面随机生成 userid，userid 底下的 mailbox 存放各种交换信息</p><p>简单的中转就监听，给同一个 room 下的其他用户（other userid）发送链接信息，然后其他用户响应返回给自己（userid），信心存放在 mailbox 下面，看看野狗文档大概就懂了，和直接用 socket 转发信息有点不一样。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://github.com/webrtc/samples" target="_blank" rel="noopener">WebRtc DEMO</a></li><li><a href="https://blog.wilddog.com/?p=1354" target="_blank" rel="noopener">如何使用野狗搭建视频聊天室-WebRTC的技术实践</a></li><li><a href="https://blog.coding.net/blog/getting-started-with-webrtc" target="_blank" rel="noopener">WebRTC 的前世今生</a></li><li><a href="https://segmentfault.com/a/1190000000436544" target="_blank" rel="noopener">使用WebRTC搭建前端视频聊天室——入门篇</a></li><li><a href="https://segmentfault.com/a/1190000000439103" target="_blank" rel="noopener">使用WebRTC搭建前端视频聊天室——信令篇</a></li><li><a href="https://segmentfault.com/a/1190000000733774" target="_blank" rel="noopener">使用WebRTC搭建前端视频聊天室——点对点通信篇</a></li><li><a href="https://segmentfault.com/a/1190000000733779" target="_blank" rel="noopener">使用WebRTC搭建前端视频聊天室——数据通道篇</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;github pages 自定义域名的 https 还没配置，chrome 强制要求 WebRtc 上 https 的，这个把栗子挂 coding 了&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://kingli.coding.me/echat/#/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;试一波&lt;/a&gt; &lt;a href=&quot;https://github.com/kinglisky/echat&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/kinglisky/echat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;只做成了简单的两人视频，输入同样的房间号进入同一个房间就行了，野狗或者网络的原因不成功可以换个房间试试 😁。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技能" scheme="http://ierii.com/tags/%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>那些游弋于天空的大鱼</title>
    <link href="http://ierii.com/2015/11/30/%E9%82%A3%E4%BA%9B%E6%B8%B8%E5%BC%8B%E4%BA%8E%E5%A4%A9%E7%A9%BA%E7%9A%84%E5%A4%A7%E9%B1%BC/"/>
    <id>http://ierii.com/2015/11/30/那些游弋于天空的大鱼/</id>
    <published>2015-11-30T15:00:00.000Z</published>
    <updated>2018-04-10T08:49:14.300Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>有的鱼是永远永远跟关不住的，因为它们属于天空。 –大鱼海棠</p></blockquote><p>很喜欢的一句话。</p><a id="more"></a><p>《大鱼海棠》给了我很多期待，本期待今年11就能看到的，但同往常一样，《大鱼》电影又跳票，据说是明年的2月上映，明年的二月不知道自己会在哪里，大四了。</p><p>最近这段时间在准备毕业设计，虽说是做毕业设计，由于今年学校并没有安排提前的毕业答辩，期待落空了，准备自己先写点栗子，留着以后在慢慢改。这学期留在了学校，本来就是不可能考研的人，也没出去培训，前端菜鸟，准备多抽点时间打打基础。毕竟前端也是个大坑，既然入坑也只好深挖。</p><p>考研的小伙伴们都在准备最后冲刺了，不少实习培训的小伙伴都已经找到了不错的工作，心头紧巴巴的，自己也得抓紧了。</p><p>最近这段时间学了点git与github的相关的基本操作，准备多发点时间深挖坑。国内的coding.net挺不错的，演示功能溜溜的，就是时不时会挂起，免费的总归有些限制的，能看的自己写的挂到网上感觉还是不错的。</p><p><del>我的博客地址–kingli.coding.io</del> <a href="http://kinglisky.github.io" target="_blank" rel="noopener">kinglisky.github.io</a></p><p>刚架起的博客，ghost 给了我很大方便，喜欢 node 系的东西，挺不错的，摆弄了两三天。博客架在了coding.net的演示功能上，因为有提供 mysql 的数据支持，所以不怕数据的丢失，静态的数据一类的，申请七牛的静态资源空间，图片一类的数据直接转存过去了，也就不怕丢了。coding和七牛可是都是免费的，正合适，就是 coding 的演示功能，一天之内若没人访问就会挂起…..交点钱就好了，呵呵，咱可没钱。</p><p>这两天准备写个静态资源托管用的小工具，关于如何架设自己的免费博客过两天发个教程，有兴趣的小伙伴可以留意一下。</p><p>大四这个学期也快走到尾巴了，好多计划的事没完成，期待的事又那么多，贪心的人啊。剩下的时间确实不多了，准备趁这段时间多掌握一些基本的技能。吃饭的时总归用的会用到的。最近比较想要学的就是 svg 和 AI 的操作，真心觉得会画画的人好幸福，有些东西一定要是自己做出来的才行，绘画这个技能点得 get 到才行。</p><p>上个月，老姐突然就结婚了，稀里糊涂，稀里糊涂。趁着中秋十一出去逛了一圈，一个人逛了一圈，南通-上海-杭州，29 刚到上海，风大雨大的，还好放晴了，那两天 afu 刚好有事，也就没多少时间陪我瞎逛了，陌生的地方有亲爱的小伙伴还是一件很开心的事。都临近毕业了，大家都忙点好呀。话说好多小伙伴都在上海，自己喜欢大 B 站也在上海，嘛，是准备在上海找工作啦，想去 B 站，十一特地去B站总部看一了一下，可惜进不去。在上海的三天都是漫无目的逛，本以为自己会把自己逛没了，还好还好，一个人能做的事比自己想象的多。二号去了杭州，西湖-河坊人山人海，那天晚上没找到住宿的地方，网吧宅了一夜，累了，三号晚马不停蹄踏上了回校的火车。</p><p>浪荡不及家，想想自己好几年都没见过家里的秋天了，风景是极好的，还记得小时候晒稻的味道，阳关柔软，竹席掀起稻子的微尘，鼻尖发痒。好久不见，可能再也不见了。</p><p>在家乡，鲤鱼是一种神圣的象征，抓不得的。水里的游鱼是自由的。</p><blockquote><p>所有活着的人类，都是海里一条巨大的鱼.<br>出生的时候他们从海的此岸出发…他们的生命就像横越大海，有时相遇，有时分开…死的时候，他们便到了岸，各去各的世界…<br>by 大鱼海棠</p></blockquote><p>很喜欢这句台词，想做一只游弋天空的大鱼，没什么不敢想的，还有好多风景不曾遇见，想见的人还不知到是谁，自己想要的东西多着呢，贪心的人永远不会嫌多的。</p><p>第一篇博客，碎碎念啦。</p><p><img src="http://ww2.sinaimg.cn/large/e8faa973jw1equssoarjfj20tm18gn8q.jpg" alt="秋"></p><p>by –南fang 偶然间发现的插画师，好喜欢。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;有的鱼是永远永远跟关不住的，因为它们属于天空。 –大鱼海棠&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很喜欢的一句话。&lt;/p&gt;
    
    </summary>
    
    
      <category term="心情" scheme="http://ierii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>Letter</title>
    <link href="http://ierii.com/2015/11/17/Letter/"/>
    <id>http://ierii.com/2015/11/17/Letter/</id>
    <published>2015-11-17T15:53:58.000Z</published>
    <updated>2018-09-04T17:09:38.980Z</updated>
    
    <content type="html"><![CDATA[<h1 id="很喜欢的一个国人插画师的作品"><a href="#很喜欢的一个国人插画师的作品" class="headerlink" title="很喜欢的一个国人插画师的作品"></a>很喜欢的一个国人插画师的作品</h1><p>特别喜欢那种天空，大鱼的感觉，自由而干净。</p><p>涂鸦王国有他作品，<a href="https://www.poocg.com/p1737074143342970" target="_blank" rel="noopener">他的主页</a></p><blockquote><p>《Letter》 by 邦乔彦</p></blockquote><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/d/03/9d822c5bbe2a0df0c0169f8dd7359.jpg" alt="邦乔彦 letter "></p><a id="more"></a><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/3/16/8ccb493621e6ac1a12271b907a318.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/a/98/acb9d598fa27480807e3399cd3762.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/b/50/07fe9971438b345786427ca5f56ba.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/6/f3/4405d6eba49cec66823c130fdaa09.jpg" alt="邦乔彦 letter "><br><img src="http://7xodob.com1.z0.glb.clouddn.com/image/9/e1/673525df2cc396745e3212fd61b83.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/3/73/a93678d44e75eac2c86b2b70c641b.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/a/60/dda4f8cc38af26475e080f90ce49a.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/2/56/fda8d61d72d51ffb2a0ee21a80a68.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/7/9f/f5a40fae532994589bb8fad0fd771.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/9/5c/5e4bbb779039b848664ddd4026997.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/7/92/8ff90c897fd8fd465fad498027ef4.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/1/5d/c9523c7762d6c7d56afef745d548b.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/8/5e/a25c2fa1cfed930b0f35d62b13938.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/f/7e/edd70f17fe1dc52ad5369e2ac1964.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/5/ab/331fdfa7f4717546969c5812278a1.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/7/5a/4b23b4d013c8d25752e338af90171.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/6/71/6a1137d9e4b7030ea951151975c5d.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/4/66/f3d6181e245591dfad196702c6008.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/3/fb/b58900f61497c74d2f39dba21bbdd.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/6/ad/47169772144b180965fcf06c7de52.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/a/80/6155e668a2a2b3ec82d1f61698413.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/7/fa/6f0894e638980015a188aa4f586b7.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/7/91/f25bfb15a998650f4d2e3821c2007.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/d/6b/068be598877000b75e593c59d49ec.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/8/87/9acfe29dcd786fdec360df2048ca0.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/a/22/60b3cff82a79c7e55076986a44cd6.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/2/fa/a776dc3e6985b88c1a0d198765512.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/2/84/239f376090224f3d84aa29ec78087.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/b/df/450c08f4827f873395d3f68ed8f97.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/1/a9/1997ff308668b25debb5a95f8110e.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/7/09/f7d52362f5d108efb45a826852105.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/d/33/9f877e13a835d27037a663196e5da.jpg" alt="邦乔彦 letter "></p><p><img src="http://7xodob.com1.z0.glb.clouddn.com/image/f/82/ed7096c7def5304683f7c0960d232.jpg" alt="邦乔彦 letter "></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;很喜欢的一个国人插画师的作品&quot;&gt;&lt;a href=&quot;#很喜欢的一个国人插画师的作品&quot; class=&quot;headerlink&quot; title=&quot;很喜欢的一个国人插画师的作品&quot;&gt;&lt;/a&gt;很喜欢的一个国人插画师的作品&lt;/h1&gt;&lt;p&gt;特别喜欢那种天空，大鱼的感觉，自由而干净。&lt;/p&gt;
&lt;p&gt;涂鸦王国有他作品，&lt;a href=&quot;https://www.poocg.com/p1737074143342970&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;他的主页&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;《Letter》 by 邦乔彦&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xodob.com1.z0.glb.clouddn.com/image/d/03/9d822c5bbe2a0df0c0169f8dd7359.jpg&quot; alt=&quot;邦乔彦 letter &quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="心情" scheme="http://ierii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
</feed>
